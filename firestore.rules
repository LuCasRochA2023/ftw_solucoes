rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own data
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to manage their appointments
    match /appointments/{appointmentId} {
      function isTimeSlotAvailable() {
        let requestedDateTime = request.resource.data.dateTime;
        let existingAppointments = exists(/databases/$(database)/documents/appointments/$(appointmentId)) &&
          get(/databases/$(database)/documents/appointments/$(appointmentId)).data.dateTime == requestedDateTime &&
          get(/databases/$(database)/documents/appointments/$(appointmentId)).data.status == 'scheduled';
        
        // Check if there are any other appointments at the same time
        let otherAppointments = exists(/databases/$(database)/documents/appointments/$(appointmentId)) &&
          get(/databases/$(database)/documents/appointments/$(appointmentId)).data.dateTime == requestedDateTime &&
          get(/databases/$(database)/documents/appointments/$(appointmentId)).data.status == 'scheduled';
        
        return !existingAppointments && !otherAppointments;
      }
      
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.status == 'scheduled'
        && request.resource.data.dateTime is timestamp
        && isTimeSlotAvailable();
      
      allow read: if request.auth != null;
      
      allow update: if request.auth != null 
        && resource.data.userId == request.auth.uid
        && request.resource.data.userId == request.auth.uid;
      
      allow delete: if request.auth != null 
        && resource.data.userId == request.auth.uid;
    }
    
    // Default deny for all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}